;>
The %heap agent is entirely concerned with creating a channel with
collections of links and text snippets, and the ability to comment on
those items.

## types

All types are located in `/sur/heap`


- `$flag`: identifier for a heap channel
- `$heap`: a collection of curiosities, otherwise known as a gallery,
  used for collecting links, images, and text snippets
- `$view`: the persisted display format for a heap
- `$perm`: represents the permissions for a heap channel with a pointer
  back to the enclosing group.
- `$stash`: heaps I've joined
- `$curio`: an item in the collection or a comment about an item
- `$curios`: a set of time ordered heap items
- `$feel`: either an emoji identifier like :wave or a URL for custom identifiers
- `$seal`: the id of a curio and its meta-responses
- `$heart`: the curio data itself
- `$inline`: curio content that flows within a paragraph
- `$action`: the complete set of data required to modify a heap
- `$update`: a time representation of a modification to a heap
- `$diff`: the full suite of modifications that can be made to a heap
- `$log`: a time ordered history of modifications to a heap
- `$net`: host or subscriber indicator
- `$briefs`: a map of heap unread information
- `$remark`: a marker representing the last note I've read
- `$leave`: a flag to pass for a channel leave
- `$create`: represents a channel creation request - gets sent to
  groups to finish creation


## api

### pokes

Each poke is organized by mark

- `%heap-action`
  - `%curios` modifications to curios and their comments
  - `%add-sects` adds roles to the writer permissions
  - `%del-sects` deletes roles from the writer permissions
  - `%view` modifies the display of the heap
  - `%create` TODO remove?
- `%heap-create` creates a heap channel first in this agent and then passes
  to the %groups agent to create there
- `%flag` or `%channel-join` starts the joining process for a heap channel
- `%channel-leave` leaves the channel if not hosting
- `%heap-remark-action` marks our last read curio


### scries

Each scry is organized by path

- `x/stash` retrieves full map of heaps
- `x/briefs` retrieves full map of unread data
- `x/heap/\{ship}/\{name}`
  - `/perm` grabs the permissions for the channel
  - `/curios`
    - `/newest/\{count}` grabs the last `count` curios
    - `/older/\{start}/\{count}` grabs `count` number of curios previous, starting from `start`
    - `/newer/\{start}/\{count}` grabs `count` number of curios ahead, starting from `start`
    - `/curio/id/\{time}` grabs the curio at the time

### subscriptions

Each subscription is organized by path

- `/ui` sends general updates about heap channels to the UI
- `/briefs` sends updates about read curios
- `/heap/\{ship}/\{name}`
  - `/ui` updates to the UI, specific to a channel and generally actions
  - `/updates` if time, pass the logs from this heap starting from
    time, otherwise pass the whole log
  - `/ui/curios` updates to the UI for curios in this specific channel

